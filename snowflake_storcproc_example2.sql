USE ROLE GG_SNOWFLAKE_REPORTING_GPAVON;
USE WAREHOUSE FRB_WH;
USE DATABASE EDCI_SANDBOX;
USE SCHEMA REPORTING_GPAVON;



CREATE or replace PROCEDURE SP_TL_PWM_DEP_REFS_5031_P2(DATEKEY_PARAM VARCHAR)
RETURNS VARCHAR
LANGUAGE javascript
AS
$$
var rs = snowflake.execute( { sqlText: 


`


--CREATE OR REPLACE TABLE TL_PWM_DEP_REFS_5031 AS 
INSERT INTO TL_PWM_DEP_REFS_5031

	SELECT 
			 
			  PROD_DT
			 ,DATE_KEY
			 ,PWM_OFCR_CD
			,SUM(PRINCIPAL_GL_ENDING_BAL)										AS PRINCIPAL_GL_ENDING_BAL
			,SUM(PRINCIPAL_MTD_AVERAGE_BAL)										AS PRINCIPAL_MTD_AVERAGE_BAL
			,SUM(PRINCIPAL_QTD_AVERAGE_BAL)										AS PRINCIPAL_QTD_AVERAGE_BAL
			,SUM(PRINCIPAL_YTD_AVERAGE_BAL)										AS PRINCIPAL_YTD_AVERAGE_BAL
			--CHECKING
			,SUM(CASE 
					WHEN CHECKING_FLG = 'Y' THEN PRINCIPAL_GL_ENDING_BAL
					ELSE 0
				END)															AS CHECKING_PRINCIPAL_GL_ENDING_BAL
			,SUM(CASE 
					WHEN CHECKING_FLG = 'Y' THEN PRINCIPAL_MTD_AVERAGE_BAL
					ELSE 0
				END)															AS CHECKING_PRINCIPAL_MTD_AVERAGE_BAL
			,SUM(CASE 
					WHEN CHECKING_FLG = 'Y' THEN PRINCIPAL_QTD_AVERAGE_BAL
					ELSE 0
				END)															AS CHECKING_PRINCIPAL_QTD_AVERAGE_BAL
			,SUM(CASE 
					WHEN CHECKING_FLG = 'Y' THEN PRINCIPAL_YTD_AVERAGE_BAL
					ELSE 0
				END)															AS CHECKING_PRINCIPAL_YTD_AVERAGE_BAL
			,GETDATE()															AS INSERT_DT
	
			FROM A5031_PWM_REFERRALS
			WHERE 1 = 1
			GROUP BY
			 PWM_OFCR_CD
			 ,PROD_DT
			 ,DATE_KEY
	



`
   
   
   } );
return 'Part 2 of 5031 PWM REF data done.';
$$;

--CALL SP_TL_PWM_DEP_REFS_5031('20220317')
--CALL SP_TL_PWM_DEP_REFS_5031_P2('20220317')





	;


